.\" Written by Kurt Lust, kurt.lust@uantwerpen.be.
.TH man 1 "9 July 2021" "1.1" "hybrid_hello (vsc-tutorial) command"

.SH NAME
hybrid_hello \- Simple "Hello, World!"-style hybrid MPI/OpenMP program

.SH DESCRIPTION
\fBhybrid_hello\fR is a simple "Hello, World!"-style hybrid MPI/OpenMP program.
It is a more sophisticated variant of \fBmpi_omp_hello\fR that can print a lot
more information.

Each thread prints a line with its MPI rank, OpenMP thread number, the core
number and the node name the thread is running on.
The output is sorted according to the MPI rank and OpenMP thread number
within each MPI rank. Additional output specific for this version is
the option to label each call to \fBhybrid_hello\fR which is great for
distinguishing between the output of different components of a
heterogeneous job, and information on the pinning of each thread.

The number of threads per rank can be set through the OMP_NUM_THREADS
environment variable, and the MPI processes should be started using
\fBsrun\fR or \fBmpirun\fR with the appropriate options for your environment.
When started without \fBsrun\fR, the behaviour will depend on the configuration
of the system. On some systems it may fail to run and on other systems
it will just run a single instance of the program, in which case
it would actually show what a regular OpenMP program would do.

.SH OPTIONS
.TP
\fB\-h\fR
Print help information about the command
.TP
\fB\-l\fR \fI\,LABEL\/\fR
Label the output of this process with \fI\,LABEL\/\fR. This automatically
enables displaying labels.

.SH EXAMPLE

The following is a job script to start a heterogeneous job in Slurm that
shows many features of this program:

.EX
#! /bin/bash
#SBATCH --time=2:00
#SBATCH --ntasks=4 --cpus-per-task=4
#SBATCH hetjob
#SBATCH --ntasks=2 --cpus-per-task=8

srun --ntasks=4 --cpus-per-task=4 hybrid_hello -l exe1 : \\
     --ntasks=2 --cpus-per-task=8 hybrid_hello -l exe2
.EE

You may have to add the appropriate \fBmodule load\fR commands to the script
to ensure that \fBhybrid_hello\fR works, and the script also assumes that it
is in the search path for executables.

.SH SEE ALSO
omp_hello(1), mpi_hello(1), mpi_omp_hello(1), vsc-tutorial(1)

.SH AUTHOR
Kurt Lust (Kurt.Lust@uantwerpen.be)
